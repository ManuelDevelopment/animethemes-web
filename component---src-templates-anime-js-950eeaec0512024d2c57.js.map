{"version":3,"sources":["webpack:///./src/components/card/index.js","webpack:///./src/components/tag/index.js","webpack:///./src/components/switcher/index.js","webpack:///./src/components/utils/themeEntryTags.js","webpack:///./src/components/utils/videoTags.js","webpack:///./src/components/externalLink/index.js","webpack:///./src/components/descriptionList/index.js","webpack:///./src/components/container/sidebar.js","webpack:///./src/components/card/collapse.js","webpack:///./src/components/card/theme/style.js","webpack:///./src/components/button/video.js","webpack:///./src/components/card/theme/index.js","webpack:///./src/components/switcher/theme.js","webpack:///./src/templates/anime.js","webpack:///./src/components/button/play.js","webpack:///./src/components/utils/songTitleWithArtists.js"],"names":["StyledCard","styled","div","props","theme","colors","secondaryTitle","primaryBackground","elevation","hoverable","css","Card","children","StyledTag","span","gapsRow","StyledTagIcon","FontAwesomeIcon","primaryLowEmphasis","warning","warningTitle","Tag","icon","iconProps","fixedWidth","small","StyledSwitcher","elevatedPrimaryBackground","Switcher","ThemeEntryTags","entry","row","wrap","gapsBoth","faFilm","episodes","spoiler","faBomb","nsfw","faExclamationTriangle","VideoTags","video","title","resolution","nc","faNotEqual","subbed","faClosedCaptioning","lyrics","faComment","uncen","faEye","source","faCompactDisc","toUpperCase","overlap","faStream","StyledExternalLink","Text","attrs","link","ExternalLink","href","target","faChevronCircleRight","StyledDescriptionList","dl","StyledKey","dt","StyledValue","dd","DescriptionList","Object","entries","map","description","variant","StyledContainerSidebar","StyledSidebar","StyledBody","ContainerSidebar","sidebar","StyledCollapse","height","CollapseCard","useState","collapse","setCollapse","setHeight","ref","useRef","useEffect","current","offsetHeight","onClick","StyledThemeCard","gapsColumn","StyledRow","StyledSequence","primaryTitle","secondary","primaryMediumEmphasis","StyledHeader","StyledVersion","StyledVideoListContainer","StyledVideoList","Flex","VideoButton","to","filename","ThemeCard","slug","song","version","videos","index","ThemeSwitcher","themes","groups","useMemo","reduce","group","find","name","push","activeGroup","setActiveGroup","length","alignSelf","active","StyledAnimePage","StyledCover","img","fullWidth","StyledList","AnimeDetailPage","anime","pageContext","useAniList","synopsis","image","src","alt","synonyms","synonym","text","year","season","toLowerCase","resources","resource","type","maxLines","dangerouslySetInnerHTML","__html","StyledButtonPlay","Button","StyledPrefix","secondaryBackground","ButtonPlay","faPlay","SongTitleWithArtists","artists","artist","as"],"mappings":"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","file":"component---src-templates-anime-js-950eeaec0512024d2c57.js","sourcesContent":["import React from \"react\";\nimport styled, {css} from \"styled-components\";\n\nconst StyledCard = styled.div`\n    padding: 1rem 1.5rem;\n    border-left: 4px solid ${(props) => props.theme.colors.secondaryTitle};\n    border-radius: 0 0.5rem 0.5rem 0;\n\n    background-color: ${(props) => props.theme.colors.primaryBackground[props.theme.elevation]};\n\n    ${(props) => props.hoverable && css`\n        cursor: pointer;\n\n        &:hover {\n            background-color: ${(props) => props.theme.colors.primaryBackground[props.theme.elevation + 1]};\n        }\n    `}\n`;\n\nexport default function Card({ children, ...props }) {\n    return (\n        <StyledCard {...props}>\n            {children}\n        </StyledCard>\n    )\n}\n","import React from \"react\";\nimport styled, {css} from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {gapsRow} from \"styles/mixins\";\nimport Text from \"components/text\";\n\nconst StyledTag = styled.span`\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n\n    ${gapsRow(\"0.25rem\")}\n`;\nconst StyledTagIcon = styled(FontAwesomeIcon)`\n    color: ${(props) => props.theme.colors.primaryLowEmphasis};\n\n    ${(props) => props.warning && css`\n        color: ${(props) => props.theme.colors.warningTitle};\n    `}\n`;\n\nexport default function Tag({ icon, iconProps, warning, children, ...props }) {\n    return (\n        <StyledTag {...props}>\n            {!!icon && (\n                <StyledTagIcon icon={icon} fixedWidth warning={warning} {...iconProps}/>\n            )}\n            {!!children && (\n                <Text small>\n                    {children}\n                </Text>\n            )}\n        </StyledTag>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport elevatedPrimaryBackground from \"styles/helper\";\nimport {gapsRow} from \"styles/mixins\";\n\nconst StyledSwitcher = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    background-color: ${elevatedPrimaryBackground};\n\n    border-radius: 1rem;\n\n    ${gapsRow(\"0.5rem\")}\n`;\n\nexport default function Switcher({ children, ...props }) {\n    return (\n        <StyledSwitcher {...props}>\n            {children}\n        </StyledSwitcher>\n    );\n}\n","import Tag from \"components/tag\";\nimport {faBomb, faExclamationTriangle, faFilm} from \"@fortawesome/free-solid-svg-icons\";\nimport Flex from \"components/flex\";\nimport React from \"react\";\n\nexport default function ThemeEntryTags({ entry }) {\n    return (\n        <Flex row wrap gapsBoth=\"0.75rem\">\n            <Tag icon={faFilm}>\n                {entry.episodes || \"—\"}\n            </Tag>\n            {!!entry.spoiler && (\n                <Tag icon={faBomb} warning>\n                    SPOILER\n                </Tag>\n            )}\n            {!!entry.nsfw && (\n                <Tag icon={faExclamationTriangle} warning>\n                    NSFW\n                </Tag>\n            )}\n        </Flex>\n    );\n}\n","import {\n    faClosedCaptioning,\n    faComment,\n    faCompactDisc,\n    faEye,\n    faNotEqual,\n    faStream\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Tag from \"components/tag\";\nimport Flex from \"components/flex\";\n\nexport default function VideoTags({ video }) {\n    return (\n        <Flex row wrap gapsBoth=\"0.75rem\">\n            <Tag title=\"Resolution\">\n                { video.resolution }p\n            </Tag>\n\n            {!!video.nc && (\n                <Tag icon={faNotEqual} title=\"No Credits\"/>\n            )}\n\n            {!!video.subbed && (\n                <Tag icon={faClosedCaptioning} title=\"With Subtitles\"/>\n            )}\n\n            {!!video.lyrics && (\n                <Tag icon={faComment} title=\"With Lyrics\"/>\n            )}\n\n            {!!video.uncen && (\n                <Tag icon={faEye} title=\"Uncensored\"/>\n            )}\n\n            {!!video.source && (\n                <Tag icon={faCompactDisc} title=\"Source\">\n                    {video.source.toUpperCase()}\n                </Tag>\n            )}\n\n            {video.overlap !== \"None\" && (\n                <Tag icon={faStream} title=\"Overlap\">\n                    {video.overlap.toUpperCase()}\n                </Tag>\n            )}\n        </Flex>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faChevronCircleRight} from \"@fortawesome/free-solid-svg-icons\";\nimport Text from \"components/text\";\nimport {gapsRow} from \"styles/mixins\";\n\nconst StyledExternalLink = styled(Text).attrs({\n    link: true\n})`\n    ${gapsRow(\"0.25rem\")}\n`;\n\nexport default function ExternalLink({ href, children, ...props }) {\n    return (\n        <StyledExternalLink href={href} target=\"_blank\" {...props}>\n            <span>{children}</span>\n            <FontAwesomeIcon icon={faChevronCircleRight}/>\n        </StyledExternalLink>\n    );\n}\n","import React from 'react';\nimport Title from \"components/text/title\";\nimport styled from \"styled-components\";\n\nconst StyledDescriptionList = styled.dl`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    margin: 0;\n`;\nconst StyledKey = styled.dt`\n    margin: 0 0 0.25rem 0;\n`;\nconst StyledValue = styled.dd`\n    margin: 0;\n\n    &:not(:last-child) {\n        margin-bottom: 1.5rem;\n    }\n`;\n\nexport default function DescriptionList({ children, ...props }) {\n    return (\n        <StyledDescriptionList {...props}>\n            {Object.entries(children).map(([ title, description ]) => (\n                !!description && (\n                    <>\n                        <StyledKey>\n                            <Title variant=\"section\">{title}</Title>\n                        </StyledKey>\n                        <StyledValue>{description}</StyledValue>\n                    </>\n                )\n            ))}\n        </StyledDescriptionList>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledContainerSidebar = styled.div`\n    display: flex;\n    flex-direction: row;\n\n    @media (max-width: 720px) {\n        flex-direction: column;\n    }\n`;\nconst StyledSidebar = styled.div`\n    flex: 1;\n\n    @media (min-width: 721px) {\n        margin-right: 2rem;\n    }\n`;\nconst StyledBody = styled.div`\n    flex: 3;\n`;\n\nexport default function ContainerSidebar({ sidebar, children, ...props }) {\n    return (\n        <StyledContainerSidebar {...props}>\n           <StyledSidebar>\n               {sidebar}\n           </StyledSidebar>\n           <StyledBody>\n               {children}\n           </StyledBody>\n       </StyledContainerSidebar>\n    );\n}\n","import React, {useEffect, useRef, useState} from \"react\";\nimport styled from \"styled-components\";\nimport Card from \"components/card\";\n\nconst StyledCollapse = styled.div`\n    height: ${(props) => props.height};\n    overflow: hidden;\n    transition: height 250ms;\n`;\n\nexport default function CollapseCard({ children, ...props }) {\n    const [collapse, setCollapse] = useState(true);\n    const [height, setHeight] = useState(null);\n    const ref = useRef(null);\n\n    useEffect(() => {\n        setHeight(ref.current.children[0].offsetHeight);\n    }, [collapse, children]);\n\n    return (\n        <Card hoverable onClick={() => setCollapse(!collapse)} {...props}>\n            <StyledCollapse ref={ref} height={height ? `${height}px` : \"auto\"}>\n                {children(collapse)}\n            </StyledCollapse>\n        </Card>\n    );\n}\n","import styled, {css} from \"styled-components\";\nimport Flex from \"components/flex\";\nimport Text from \"components/text\";\nimport {gapsColumn} from \"styles/mixins\";\nimport Card from \"components/card\";\n\nexport const StyledThemeCard = styled(Card)`\n    ${gapsColumn()}\n`;\n\nexport const StyledRow = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`;\n\nexport const StyledSequence = styled(Text)`\n    flex: 0 0 2.5rem;\n\n    display: flex;\n\n    color: ${(props) => props.theme.colors.primaryTitle};\n\n    ${(props) => props.secondary && css`\n        color: ${(props) => props.theme.colors.primaryMediumEmphasis};\n\n        @media (max-width: 720px) {\n            align-self: flex-start;\n        }\n    `}\n`;\n\nexport const StyledHeader = styled.div`\n    flex: 1;\n`;\n\nexport const StyledVersion = styled.div`\n    flex: 1;\n\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    @media (max-width: 720px) {\n        flex-direction: column;\n        align-items: flex-start;\n\n        ${gapsColumn()}\n    }\n`;\n\nexport const StyledVideoListContainer = styled.div`\n    flex: 1;\n`;\n\nexport const StyledVideoList = styled(Flex).attrs({\n    row: true,\n    wrap: true,\n    gapsBoth: \"0.75rem\"\n})`\n    @media (min-width: 721px) {\n        justify-content: flex-end;\n    }\n`;\n","import styled from \"styled-components\";\nimport ButtonPlay from \"components/button/play\";\nimport VideoTags from \"components/utils/videoTags\";\n\nconst StyledBody = styled.div`\n    padding: calc(0.75rem / 2);\n`;\n\nexport default function VideoButton({ video }) {\n    return (\n        <ButtonPlay to={`/video/${video.filename}`}>\n            <StyledBody>\n                <VideoTags video={video}/>\n            </StyledBody>\n        </ButtonPlay>\n    );\n}\n","import React from \"react\";\nimport {\n    StyledHeader,\n    StyledRow,\n    StyledSequence,\n    StyledThemeCard,\n    StyledVersion,\n    StyledVideoList,\n    StyledVideoListContainer\n} from \"./style\";\nimport Elevator from \"components/elevator\";\nimport VideoButton from \"components/button/video\";\nimport SongTitleWithArtists from \"components/utils/songTitleWithArtists\";\nimport ThemeEntryTags from \"components/utils/themeEntryTags\";\n\nexport default function ThemeCard({ theme }) {\n    return (\n        <StyledThemeCard>\n            <Elevator>\n                <StyledRow>\n                    <StyledSequence small>{theme.slug}</StyledSequence>\n                    <StyledHeader>\n                        <SongTitleWithArtists song={theme.song}/>\n                    </StyledHeader>\n                </StyledRow>\n                {theme.entries.map(entry => (\n                    <StyledRow key={entry.version || 0}>\n                        <StyledSequence small secondary>{!!entry.version && `v${entry.version}`}</StyledSequence>\n                        <StyledVersion>\n                            <ThemeEntryTags entry={entry}/>\n                            {!!entry.videos && (\n                                <StyledVideoListContainer>\n                                    <StyledVideoList>\n                                        {entry.videos.map((video, index) => (\n                                            <VideoButton key={index} video={video}/>\n                                        ))}\n                                    </StyledVideoList>\n                                </StyledVideoListContainer>\n                            )}\n                        </StyledVersion>\n                    </StyledRow>\n                ))}\n            </Elevator>\n        </StyledThemeCard>\n    );\n}\n","import React, {useMemo, useState} from \"react\";\nimport ThemeCard from \"components/card/theme\";\nimport Flex, {FlexItem} from \"components/flex\";\nimport Button from \"components/button\";\nimport Switcher from \"components/switcher\";\n\nexport default function ThemeSwitcher({ themes }) {\n    const groups = useMemo(() => themes.reduce((groups, theme) => {\n        const group = groups.find((group) => group.name === theme.group);\n        if (!group) {\n            groups.push({\n                name: theme.group,\n                themes: [theme],\n            });\n        } else {\n            group.themes.push(theme);\n        }\n        return groups;\n    }, []), [ themes ]);\n\n    const [activeGroup, setActiveGroup] = useState(groups[0]);\n\n    return (\n        <Flex gapsColumn=\"1rem\">\n            {groups.length > 1 && (\n                <FlexItem alignSelf=\"flex-start\">\n                    <Switcher>\n                        {groups.map((group) => (\n                            <Button\n                                key={group.name}\n                                active={activeGroup === group}\n                                onClick={() => setActiveGroup(group)}\n                            >\n                                {group.name}\n                            </Button>\n                        ))}\n                    </Switcher>\n                </FlexItem>\n            )}\n            {activeGroup.themes.map((theme, index) => (\n                <ThemeCard key={index} theme={theme} />\n            ))}\n        </Flex>\n    );\n}\n","import React from \"react\";\nimport {Link} from \"gatsby\";\nimport styled from \"styled-components\";\nimport useAniList from \"../hooks/useAniList\";\nimport ExternalLink from \"../components/externalLink\";\nimport DescriptionList from \"components/descriptionList\";\nimport Text from \"components/text\";\nimport Title from \"components/text/title\";\nimport Flex from \"components/flex\";\nimport ContainerSidebar from \"components/container/sidebar\";\nimport CollapseCard from \"components/card/collapse\";\nimport {fullWidth, gapsColumn} from \"styles/mixins\";\nimport ThemeSwitcher from \"components/switcher/theme\";\n\nconst StyledAnimePage = styled.div`\n    ${gapsColumn(\"1.5rem\")}\n`;\nconst StyledCover = styled.img(fullWidth);\nconst StyledList = styled.div`\n    display: flex;\n    flex-direction: column;\n\n    ${gapsColumn(\"0.5rem\")}\n\n    text-align: center;\n`;\n\nexport default function AnimeDetailPage({ pageContext: { anime } }) {\n    const { synopsis, image } = useAniList(anime);\n\n    const sidebar = (\n        <Flex gapsColumn=\"1.5rem\">\n            <StyledCover src={image} alt=\"Cover\"/>\n            <DescriptionList>\n                {{\n                    \"Alternative Titles\": (\n                        !!anime.synonyms && !!anime.synonyms.length && (\n                            <StyledList>\n                                {anime.synonyms.map((synonym) => (\n                                    <Text key={synonym.text}>{synonym.text}</Text>\n                                ))}\n                            </StyledList>\n                        )\n                    ),\n                    \"Premiere\": (\n                        <Link to={`/year/${anime.year}${anime.season ? `/${anime.season.toLowerCase()}` : \"\"}`}>\n                            <Text link>\n                                {(anime.season ? anime.season + \" \" : \"\") + anime.year}\n                            </Text>\n                        </Link>\n                    ),\n                    \"Links\": (\n                        !!anime.resources && anime.resources.map((resource) => (\n                            <ExternalLink key={resource.link} href={resource.link}>\n                                {resource.type}\n                            </ExternalLink>\n                        ))\n                    )\n                }}\n            </DescriptionList>\n        </Flex>\n    );\n\n    return (\n        <StyledAnimePage>\n            <Title>{anime.name}</Title>\n            <ContainerSidebar sidebar={sidebar}>\n                <Flex gapsColumn=\"1rem\">\n                    <Title variant=\"section\">Synopsis</Title>\n                    <CollapseCard>\n                        {(collapse) => (\n                            <Text maxLines={collapse ? 2 : null} dangerouslySetInnerHTML={{ __html: synopsis }}/>\n                        )}\n                    </CollapseCard>\n                    <Title variant=\"section\">Themes</Title>\n                    {\n                        !!anime.themes && anime.themes.length\n                        ? <ThemeSwitcher themes={anime.themes}/>\n                        : <Text>There are no themes for this anime.</Text>\n                    }\n                </Flex>\n            </ContainerSidebar>\n        </StyledAnimePage>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faPlay} from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"components/button\";\n\nconst StyledButtonPlay = styled(Button)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    margin-left: 1rem;\n    padding: 0 0.5rem 0 0;\n`;\nconst StyledPrefix = styled.div`\n    display: inline-flex;\n    justify-content: center;\n    align-items: center;\n\n    width: 2rem;\n    height: 2rem;\n    margin-left: -1rem;\n    border-radius: 1rem;\n\n    background-color: ${(props) => props.theme.colors.secondaryBackground};\n    color: ${(props) => props.theme.colors.primaryBackground[0]};\n`;\n\nexport default function ButtonPlay({ children, ...props }) {\n    return (\n        <StyledButtonPlay {...props}>\n            <StyledPrefix>\n                <FontAwesomeIcon icon={faPlay} fixedWidth />\n            </StyledPrefix>\n            {children}\n        </StyledButtonPlay>\n    );\n}\n","import Title from \"components/text/title\";\nimport Text from \"components/text\";\n\nexport default function SongTitleWithArtists({ song }) {\n    return (\n        <Title variant=\"card\">\n            <Text link>{song.title}</Text>\n            {!!song.artists && !!song.artists.length && (\n                <>\n                    <Text small> by </Text>\n                    {song.artists.map((artist, index) => (\n                        <Text key={artist.as || artist.name} link>\n                            {(artist.as || artist.name) + (index === song.artists.length - 2 ? \" & \" : index < song.artists.length - 1 ? \", \" : \"\")}\n                        </Text>\n                    ))}\n                </>\n            )}\n        </Title>\n    );\n}\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/components/text/title.js","webpack:///./src/components/text/style.js","webpack:///./src/templates/year.js","webpack:///./src/components/flex/index.js"],"names":["StyledTitlePage","styled","StyledTextBase","attrs","props","as","color","theme","colors","primaryTitle","StyledTitleSection","primaryHighEmphasis","StyledTitleCard","Title","variant","children","span","code","link","css","secondaryTitle","block","maxLines","elevatedPrimaryBackground","StyledYearPage","div","YearPage","yearList","pageContext","map","year","alignItems","justifyContent","to","StyledFlex","row","wrap","gapsRow","gapsColumn","gapsBoth","StyledFlexItem","flex","alignSelf","justifySelf","Flex","FlexItem"],"mappings":"8LAIMA,EAAkBC,YAAOC,KAAgBC,OAAM,SAACC,GAAD,MAAY,CAC7DC,GAAI,KACJC,MAAOF,EAAMG,MAAMC,OAAOC,iBAFT,6EAAGR,CAAH,sCAOfS,EAAqBT,YAAOC,KAAgBC,OAAM,SAACC,GAAD,MAAY,CAChEC,GAAI,KACJC,MAAOF,EAAMG,MAAMC,OAAOG,wBAFN,gFAAGV,CAAH,+DAQlBW,EAAkBX,YAAOC,KAAgBC,OAAM,SAACC,GAAD,MAAY,CAC7DE,MAAOF,EAAMG,MAAMC,OAAOC,iBADT,6EAAGR,CAAH,uBAMN,SAASY,EAAT,GAA0D,IAAD,IAAxCC,eAAwC,MAA9B,OAA8B,EAAtBC,EAAsB,EAAtBA,SAAaX,EAAS,sCACpE,OAAQU,GACJ,IAAK,UACD,OACI,cAACJ,EAAD,iBAAwBN,EAAxB,UACKW,KAGb,IAAK,OACD,OACI,cAACH,EAAD,iBAAqBR,EAArB,UACKW,KAGb,IAAK,OACL,QACI,OACI,cAACf,EAAD,iBAAqBI,EAArB,UACKW,Q,kCC3CrB,8DAGab,EAAiBD,IAAOe,KAAKb,OAAM,SAACC,GAAD,MAAY,CACxDC,GAAID,EAAMC,KAAOD,EAAMa,KAAO,OAAS,YADhB,wEAAGhB,CAAH,yCAGd,SAACG,GAAD,OAAWA,EAAME,OAAS,aAEjC,SAACF,GAAD,OAAWA,EAAMc,MAAQC,YAAd,gBACA,SAACf,GAAD,OAAWA,EAAMG,MAAMC,OAAOY,qBAGzC,SAAChB,GAAD,OAAWA,EAAMiB,OAASF,YAAf,uBAIX,SAACf,GAAD,OAAWA,EAAMkB,UAAYH,YAAlB,4FAEaf,EAAMkB,aAK9B,SAAClB,GAAD,OAAWA,EAAMa,MAAQE,YAAd,yGAIWI,S,iJCtBtBC,EAAiBvB,IAAOwB,IAAV,uEAAGxB,CAAH,iGAML,SAASyB,EAAT,GAAkD,IAAfC,EAAc,EAA7BC,YAAeD,SAC9C,OACI,cAACH,EAAD,UACKG,EAASE,KAAI,SAACC,GAAD,OACV,cAAC,IAAD,CAAiBC,WAAW,SAASC,eAAe,SAApD,SACI,cAAC,IAAD,CAAQC,GAAE,SAAWH,EAArB,SACI,cAAC,IAAD,CAAOhB,QAAQ,OAAf,SAAuBgB,OAFpBA,U,wKCXrBI,EAAajC,IAAOwB,IAAV,uEAAGxB,CAAH,mGAEM,SAACG,GAAD,OAAWA,EAAM+B,IAAM,MAAQ,YACpC,SAAC/B,GAAD,OAAWA,EAAMgC,KAAO,OAAS,YAC3B,SAAChC,GAAD,OAAWA,EAAM4B,gBAAkB,gBACvC,SAAC5B,GAAD,OAAWA,EAAM2B,YAAc,aAE5C,SAAC3B,GAAD,OAAWA,EAAMiC,SAAWA,YAAQjC,EAAMiC,YAC1C,SAACjC,GAAD,OAAWA,EAAMkC,YAAcA,YAAWlC,EAAMkC,eAChD,SAAClC,GAAD,OAAWA,EAAMmC,UAAYpB,YAAlB,uDAEMf,EAAMmC,SAGFnC,EAAMmC,aAI3BC,EAAiBvC,IAAOwB,IAAV,2EAAGxB,CAAH,+CACR,SAACG,GAAD,OAAWA,EAAMqC,MAAQ,cACnB,SAACrC,GAAD,OAAWA,EAAMsC,WAAa,UAC5B,SAACtC,GAAD,OAAWA,EAAMuC,aAAe,UAGrC,SAASC,EAAT,GAAuC,IAAvB7B,EAAsB,EAAtBA,SAAaX,EAAS,4BACjD,OACI,cAAC8B,EAAD,iBAAgB9B,EAAhB,UACKW,KAKN,SAAS8B,EAAT,GAA2C,IAAvB9B,EAAsB,EAAtBA,SAAaX,EAAS,4BAC7C,OACI,cAACoC,EAAD,iBAAoBpC,EAApB,UACKW","file":"component---src-templates-year-js-0f028b56cda8b9a9e216.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport {StyledTextBase} from \"components/text/style\";\n\nconst StyledTitlePage = styled(StyledTextBase).attrs((props) => ({\n    as: \"h1\",\n    color: props.theme.colors.primaryTitle\n}))`\n    font-size: 2rem;\n    font-weight: bold;\n`;\nconst StyledTitleSection = styled(StyledTextBase).attrs((props) => ({\n    as: \"h2\",\n    color: props.theme.colors.primaryHighEmphasis\n}))`\n    font-size: 1rem;\n    font-weight: bold;\n    text-transform: uppercase;\n`;\nconst StyledTitleCard = styled(StyledTextBase).attrs((props) => ({\n    color: props.theme.colors.primaryTitle\n}))`\n    font-weight: bold;\n`;\n\nexport default function Title({ variant = \"page\", children, ...props }) {\n    switch (variant) {\n        case \"section\":\n            return (\n                <StyledTitleSection {...props}>\n                    {children}\n                </StyledTitleSection>\n            );\n        case \"card\":\n            return (\n                <StyledTitleCard {...props}>\n                    {children}\n                </StyledTitleCard>\n            );\n        case \"page\":\n        default:\n            return (\n                <StyledTitlePage {...props}>\n                    {children}\n                </StyledTitlePage>\n            );\n    }\n}\n","import styled, { css } from \"styled-components\";\nimport elevatedPrimaryBackground from \"styles/helper\";\n\nexport const StyledTextBase = styled.span.attrs((props) => ({\n    as: props.as || (props.code ? \"code\" : \"span\")\n}))`\n    color: ${(props) => props.color || \"inherit\"};\n\n    ${(props) => props.link && css`\n        color: ${(props) => props.theme.colors.secondaryTitle};\n    `}\n\n    ${(props) => props.block && css`\n        display: block;\n    `}\n\n    ${(props) => props.maxLines && css`\n        display: -webkit-box;\n        -webkit-line-clamp: ${props.maxLines};\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n    `}\n  \n    ${(props) => props.code && css`\n        font-family: monospace;\n        padding: 0.25rem;\n        border-radius: 0.25rem;\n        background-color: ${elevatedPrimaryBackground};\n        line-height: 1.5rem;\n    `}\n\n    margin: 0;\n`;\n","import styled from \"styled-components\";\nimport Flex from \"components/flex\";\nimport Button from \"components/button\";\nimport Title from \"components/text/title\";\n\nconst StyledYearPage = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(16rem, 1fr));\n    grid-auto-rows: 8rem;\n`;\n\nexport default function YearPage({ pageContext: { yearList } }) {\n    return (\n        <StyledYearPage>\n            {yearList.map((year) => (\n                <Flex key={year} alignItems=\"center\" justifyContent=\"center\">\n                    <Button to={`/year/${year}`}>\n                        <Title variant=\"page\">{year}</Title>\n                    </Button>\n                </Flex>\n            ))}\n        </StyledYearPage>\n    );\n}\n","import React from \"react\";\nimport styled, {css} from \"styled-components\";\nimport {gapsColumn, gapsRow} from \"styles/mixins\";\n\nconst StyledFlex = styled.div`\n    display: flex;\n    flex-direction: ${(props) => props.row ? \"row\" : \"column\"};\n    flex-wrap: ${(props) => props.wrap ? \"wrap\" : \"nowrap\"};\n    justify-content: ${(props) => props.justifyContent || \"flex-start\"};\n    align-items: ${(props) => props.alignItems || \"stretch\"};\n\n    ${(props) => props.gapsRow && gapsRow(props.gapsRow)}\n    ${(props) => props.gapsColumn && gapsColumn(props.gapsColumn)}\n    ${(props) => props.gapsBoth && css`\n        // Hack to have gutters between items without an outer margin\n        margin: calc(${props.gapsBoth} / -2);\n\n        & > * {\n            margin: calc(${props.gapsBoth} / 2);\n        }\n    `}\n`;\nconst StyledFlexItem = styled.div`\n    flex: ${(props) => props.flex || \"0 0 auto\"};\n    align-self: ${(props) => props.alignSelf || \"auto\"};\n    justify-self: ${(props) => props.justifySelf || \"auto\"};\n`;\n\nexport default function Flex({ children, ...props }) {\n    return (\n        <StyledFlex {...props}>\n            {children}\n        </StyledFlex>\n    );\n}\n\nexport function FlexItem({ children, ...props }) {\n    return (\n        <StyledFlexItem {...props}>\n            {children}\n        </StyledFlexItem>\n    );\n}\n"],"sourceRoot":""}
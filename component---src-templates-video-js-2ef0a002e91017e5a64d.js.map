{"version":3,"sources":["webpack:///./src/components/tag/index.js","webpack:///./src/components/card/searchResult/index.js","webpack:///./src/components/utils/themeEntryTags.js","webpack:///./src/components/utils/videoTags.js","webpack:///./src/components/card/searchResult/anime.js","webpack:///./src/components/card/searchResult/artist.js","webpack:///./src/hooks/useAniListArtist.js","webpack:///./src/components/utils/songTitleWithArtists.js","webpack:///./src/templates/video.js","webpack:///./src/components/button/video.js"],"names":["StyledTag","styled","span","gapsRow","StyledTagIcon","FontAwesomeIcon","props","theme","colors","primaryLowEmphasis","warning","css","warningTitle","Tag","icon","iconProps","children","fixedWidth","small","StyledSearchResultCard","Card","StyledCover","img","StyledBody","div","StyledChildren","SearchResultCard","title","description","image","to","card","alt","src","variant","link","maxLines","ThemeEntryTags","entry","row","wrap","gapsBoth","faFilm","episodes","spoiler","faBomb","nsfw","faExclamationTriangle","VideoTags","video","resolution","nc","faNotEqual","subbed","faClosedCaptioning","lyrics","faComment","uncen","faEye","source","faCompactDisc","toUpperCase","overlap","faStream","AnimeSearchResultCard","anime","hideThemes","useAniList","premiere","year","season","name","themes","length","slug","slice","filter","entries","videos","map","filename","block","id","faEllipsisH","ArtistSearchResultCard","artist","useState","setImage","useEffect","isCanceled","fetchAniListArtist","then","aniListArtist","useAniListArtist","songs","SongTitleWithArtists","song","artists","index","as","StyledVideoInfo","Flex","attrs","gapsColumn","VideoPage","pageContext","navigator","mediaSession","metadata","MediaMetadata","join","album","artwork","sizes","type","otherEntries","otherEntry","otherVideo","alignItems","flex","justifyContent","version","Fragment","VideoButton","currentVideo","useContext","PlayerContext","playing"],"mappings":"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","file":"component---src-templates-video-js-2ef0a002e91017e5a64d.js","sourcesContent":["import React from \"react\";\nimport styled, {css} from \"styled-components\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {gapsRow} from \"styles/mixins\";\nimport Text from \"components/text\";\n\nconst StyledTag = styled.span`\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n\n    ${gapsRow(\"0.25rem\")}\n`;\nconst StyledTagIcon = styled(FontAwesomeIcon)`\n    color: ${(props) => props.theme.colors.primaryLowEmphasis};\n\n    ${(props) => props.warning && css`\n        color: ${(props) => props.theme.colors.warningTitle};\n    `}\n`;\n\nexport default function Tag({ icon, iconProps, warning, children, ...props }) {\n    return (\n        <StyledTag {...props}>\n            {!!icon && (\n                <StyledTagIcon icon={icon} fixedWidth warning={warning} {...iconProps}/>\n            )}\n            {!!children && (\n                <Text small>\n                    {children}\n                </Text>\n            )}\n        </StyledTag>\n    );\n}\n","import React from \"react\";\nimport {Link} from \"gatsby\";\nimport Text from \"components/text\";\nimport Title from \"components/text/title\";\nimport styled from \"styled-components\";\nimport Card from \"components/card/index\";\n\nconst StyledSearchResultCard = styled(Card)`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    padding: 0 1rem 0 0;\n`;\nconst StyledCover = styled.img`\n    width: 48px;\n    height: 64px;\n    object-fit: cover;\n`;\nconst StyledBody = styled.div`\n    flex: 1;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    padding: 0 1rem;\n`;\nconst StyledChildren = styled.div`\n    @media (max-width: 720px) {\n        display: none;\n    }\n`;\n\nexport default function SearchResultCard({ title, description, image, to, children, ...props }) {\n    const card = (\n        <StyledSearchResultCard {...props}>\n            <StyledCover alt=\"Cover\" src={image}/>\n            <StyledBody>\n                <Title variant=\"card\" link maxLines={2}>{title}</Title>\n                <Text small maxLines={1}>{description}</Text>\n            </StyledBody>\n            <StyledChildren>\n                {children}\n            </StyledChildren>\n        </StyledSearchResultCard>\n    );\n\n    if (to) {\n        return (\n            <Link to={to}>\n                {card}\n            </Link>\n        );\n    }\n\n    return card;\n}\n","import Tag from \"components/tag\";\nimport {faBomb, faExclamationTriangle, faFilm} from \"@fortawesome/free-solid-svg-icons\";\nimport Flex from \"components/flex\";\nimport React from \"react\";\n\nexport default function ThemeEntryTags({ entry }) {\n    return (\n        <Flex row wrap gapsBoth=\"0.75rem\">\n            <Tag icon={faFilm}>\n                {entry.episodes || \"—\"}\n            </Tag>\n            {!!entry.spoiler && (\n                <Tag icon={faBomb} warning>\n                    SPOILER\n                </Tag>\n            )}\n            {!!entry.nsfw && (\n                <Tag icon={faExclamationTriangle} warning>\n                    NSFW\n                </Tag>\n            )}\n        </Flex>\n    );\n}\n","import {\n    faClosedCaptioning,\n    faComment,\n    faCompactDisc,\n    faEye,\n    faNotEqual,\n    faStream\n} from \"@fortawesome/free-solid-svg-icons\";\nimport Tag from \"components/tag\";\nimport Flex from \"components/flex\";\n\nexport default function VideoTags({ video }) {\n    return (\n        <Flex row wrap gapsBoth=\"0.75rem\">\n            <Tag title=\"Resolution\">\n                { video.resolution }p\n            </Tag>\n\n            {!!video.nc && (\n                <Tag icon={faNotEqual} title=\"No Credits\"/>\n            )}\n\n            {!!video.subbed && (\n                <Tag icon={faClosedCaptioning} title=\"With Subtitles\"/>\n            )}\n\n            {!!video.lyrics && (\n                <Tag icon={faComment} title=\"With Lyrics\"/>\n            )}\n\n            {!!video.uncen && (\n                <Tag icon={faEye} title=\"Uncensored\"/>\n            )}\n\n            {!!video.source && (\n                <Tag icon={faCompactDisc} title=\"Source\">\n                    {video.source.toUpperCase()}\n                </Tag>\n            )}\n\n            {video.overlap !== \"None\" && (\n                <Tag icon={faStream} title=\"Overlap\">\n                    {video.overlap.toUpperCase()}\n                </Tag>\n            )}\n        </Flex>\n    );\n}\n","import React from \"react\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faEllipsisH} from \"@fortawesome/free-solid-svg-icons\";\nimport Button from \"components/button\";\nimport Flex from \"components/flex\";\nimport Text from \"components/text\";\nimport useAniList from \"hooks/useAniList\";\nimport SearchResultCard from \"components/card/searchResult\";\nimport Elevator from \"components/elevator\";\nimport ButtonPlay from \"components/button/play\";\n\nexport default function AnimeSearchResultCard({ anime, hideThemes = false }) {\n    const { image } = useAniList(anime);\n\n    let premiere = anime.year;\n    if (anime.season) {\n        premiere = anime.season + \" \" + premiere;\n    }\n\n    return (\n        <SearchResultCard\n            title={anime.name}\n            description={`Anime • ${premiere} • ${anime.themes.length} themes`}\n            image={image}\n            to={`/anime/${anime.slug}`}\n        >\n            {!hideThemes && (\n                <Elevator>\n                    <Flex row wrap gapsBoth=\"0.75rem\">\n                        {anime.themes.slice(0, 4).filter((theme) => {\n                            return theme.entries.length && theme.entries[0].videos.length;\n                        }).map((theme) => (\n                            <ButtonPlay key={theme.id} to={`/video/${theme.entries[0].videos[0].filename}`}>\n                                <Text small block>{theme.slug}</Text>\n                            </ButtonPlay>\n                        ))}\n                        {anime.themes.length > 4 && (\n                            <Button icon title=\"Show all themes\">\n                                <FontAwesomeIcon icon={faEllipsisH} fixedWidth/>\n                            </Button>\n                        )}\n                    </Flex>\n                </Elevator>\n            )}\n        </SearchResultCard>\n    );\n}\n","import React from \"react\";\nimport useAniListArtist from \"hooks/useAniListArtist\";\nimport SearchResultCard from \"components/card/searchResult\";\n\nexport default function ArtistSearchResultCard({ artist }) {\n    const { image } = useAniListArtist(artist);\n\n    return (\n        <SearchResultCard\n            title={artist.name}\n            description={artist.songs ? `Artist • ${artist.songs.length} songs` : \"Artist\"}\n            image={image}\n        />\n    );\n}\n","import {fetchAniListArtist} from \"api/aniList\";\nimport {useEffect, useState} from \"react\";\n\nexport default function useAniList(artist) {\n    const [image, setImage] = useState(null);\n\n    useEffect(() => {\n        let isCanceled = false;\n\n        fetchAniListArtist(artist.name)\n            .then(aniListArtist => {\n                if (!isCanceled) {\n                    setImage(aniListArtist.image);\n                }\n            });\n\n        return () => { isCanceled = true };\n    }, [artist]);\n\n    return { image };\n}\n","import Title from \"components/text/title\";\nimport Text from \"components/text\";\n\nexport default function SongTitleWithArtists({ song }) {\n    return (\n        <Title variant=\"card\">\n            <Text link>{song.title}</Text>\n            {!!song.artists && !!song.artists.length && (\n                <>\n                    <Text small> by </Text>\n                    {song.artists.map((artist, index) => (\n                        <Text key={artist.as || artist.name} link>\n                            {(artist.as || artist.name) + (index === song.artists.length - 2 ? \" & \" : index < song.artists.length - 1 ? \", \" : \"\")}\n                        </Text>\n                    ))}\n                </>\n            )}\n        </Title>\n    );\n}\n","import {Link} from \"gatsby\";\nimport Flex, {FlexItem} from \"components/flex\";\nimport styled from \"styled-components\";\nimport Text from \"components/text\";\nimport useAniList from \"hooks/useAniList\";\nimport SongTitleWithArtists from \"components/utils/songTitleWithArtists\";\nimport VideoTags from \"components/utils/videoTags\";\nimport ThemeEntryTags from \"components/utils/themeEntryTags\";\nimport React, {useEffect} from \"react\";\nimport Title from \"components/text/title\";\nimport VideoButton from \"components/button/video\";\nimport AnimeSearchResultCard from \"components/card/searchResult/anime\";\nimport ArtistSearchResultCard from \"components/card/searchResult/artist\";\n\nconst StyledCover = styled.img`\n    width: 48px;\n    height: 64px;\n    object-fit: cover;\n`;\nconst StyledVideoInfo = styled(Flex).attrs({\n    gapsColumn: \"2rem\"\n})`\n    padding: 0 1rem;\n`;\n\nexport default function VideoPage({ pageContext: { video, anime, theme, entry } }) {\n    const { image } = useAniList(anime);\n\n    useEffect(() => {\n        if (theme && image) {\n            // eslint-disable-next-line no-undef\n            navigator.mediaSession.metadata = new MediaMetadata({\n                title: `${theme.slug} • ${theme.song.title}`,\n                artist: theme.song.artists.map((artist) => artist.as || artist.name).join(\", \"),\n                album: anime.name,\n                artwork: [\n                    { src: image, sizes: \"512x512\", type: \"image/jpeg\" }\n                ]\n            });\n        }\n    }, [ anime, theme, image ]);\n\n    const otherEntries = theme.entries.map(otherEntry => {\n        const videos = otherEntry.videos.filter((otherVideo) => otherVideo.filename !== video.filename);\n\n        if (!videos.length) {\n            return null;\n        }\n\n        return {\n            ...otherEntry,\n            videos\n        };\n    }).filter((otherEntry) => !!otherEntry);\n\n    return (\n        <StyledVideoInfo>\n            <Flex row alignItems=\"center\" gapsRow=\"1rem\">\n                <StyledCover alt=\"Cover\" src={image}/>\n                <FlexItem flex={1}>\n                    <Flex justifyContent=\"center\" gapsColumn=\"0.25rem\">\n                        <SongTitleWithArtists song={theme.song}/>\n                        <Text small maxLines={1}>\n                            <Text>{theme.slug} from </Text>\n                            <Link to={`/anime/${anime.slug}`}>\n                                <Text link>{anime.name}</Text>\n                            </Link>\n                        </Text>\n                    </Flex>\n                </FlexItem>\n                <Flex row alignItems=\"center\" gapsRow=\"0.5rem\">\n                    <Text small>Version {entry.version || 1}</Text>\n                    <ThemeEntryTags entry={entry}/>\n                    <Text link>&bull;</Text>\n                    <VideoTags video={video}/>\n                </Flex>\n            </Flex>\n            <Flex row gapsRow=\"2rem\">\n                <FlexItem flex={2}>\n                    <Flex gapsColumn=\"1rem\">\n                        <Title variant=\"section\">Related entries</Title>\n                        <Flex row gapsRow=\"1rem\">\n                            <FlexItem flex={1}>\n                                <AnimeSearchResultCard anime={anime} hideThemes/>\n                            </FlexItem>\n                            <FlexItem flex={1}>\n                                <Flex gapsColumn=\"1rem\">\n                                    {theme.song.artists.map((artist) => (\n                                        <ArtistSearchResultCard key={artist.name} artist={artist}/>\n                                    ))}\n                                </Flex>\n                            </FlexItem>\n                        </Flex>\n                    </Flex>\n                </FlexItem>\n                <FlexItem flex={1}>\n                    {!!otherEntries.length && (\n                        <Flex gapsColumn=\"1rem\" alignItems=\"flex-end\">\n                            <Title variant=\"section\">Other versions</Title>\n                            {otherEntries.map((otherEntry) => (\n                                <React.Fragment key={otherEntry.version}>\n                                    <Flex row alignItems=\"center\" gapsRow=\"0.5rem\">\n                                        <Text small>Version {otherEntry.version || 1}</Text>\n                                        <ThemeEntryTags entry={entry}/>\n                                    </Flex>\n                                    {otherEntry.videos.map((video, index) => (\n                                        <VideoButton key={index} video={video}/>\n                                    ))}\n                                </React.Fragment>\n                            ))}\n                        </Flex>\n                    )}\n                </FlexItem>\n            </Flex>\n        </StyledVideoInfo>\n    );\n}\n","import ButtonPlay from \"components/button/play\";\nimport VideoTags from \"components/utils/videoTags\";\nimport {useContext} from \"react\";\nimport PlayerContext from \"context/playerContext\";\n\nexport default function VideoButton({ video, ...props }) {\n    const { currentVideo } = useContext(PlayerContext);\n\n    return (\n        <ButtonPlay to={`/video/${video.filename}`} playing={currentVideo && currentVideo.filename === video.filename} {...props}>\n            <VideoTags video={video}/>\n        </ButtonPlay>\n    );\n}\n"],"sourceRoot":""}